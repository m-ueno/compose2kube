Here is the equivalent Kubernetes manifest for the given Docker Compose file:

```yaml
apiVersion: v1
kind: Pod
metadata:
  name: act-sdk-exec-pod
spec:
  containers:
  - name: act-sdk-exec
    image: ${REGISTRY}/${REPOSITORY}/${MAIN_EXEC_IMAGE}
    tty: true
    ports:
    - containerPort: 8002
    - containerPort: 5003
    env:
    - name: PYTHONPATH
      value: /workspace/app-base/src:/workspace
    volumeMounts:
    - name: workspace-app-volume
      mountPath: /workspace/app
    - name: log-volume
      mountPath: /workspace/app/exec/log
    - name: app-src-volume
      mountPath: /workspace/app/src
    - name: app-configs-volume
      mountPath: /workspace/app/exec/configs
    - name: websocket-sv-volume
      mountPath: /workspace/app-base/src/app_base/parts/websocket_sv
    securityContext:
      capabilities:
        add:
        - SYS_ADMIN
      seccompProfile: unconfined
    command:
    - "/bin/sh"
    - "-c"
    - "cd /workspace/app/src && python3 SampleApp.py"
  volumes:
  - name: workspace-app-volume
    emptyDir: {}
  - name: log-volume
    hostPath:
      path: /path/to/log
  - name: app-src-volume
    hostPath:
      path: /path/to/app_container/src
  - name: app-configs-volume
    hostPath:
      path: /path/to/app_container/configs
  - name: websocket-sv-volume
    hostPath:
      path: /path/to/add_components/websocket_sv
```

Please note that the above manifest is for a Kubernetes Pod. You can modify it accordingly to create a Deployment or StatefulSet if needed. Also, make sure to replace placeholders like `${REGISTRY}`, `${REPOSITORY}`, and `${MAIN_EXEC_IMAGE}` with actual values in your Kubernetes environment.